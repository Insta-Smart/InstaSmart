#The name of your workflow.
name:  Test, Build and Release
# Trigger the workflow on push or pull request to master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

#A workflow run is made up of one or more jobs. Jobs run in parallel by default.
jobs:

  Unit_Tests:
    #The type of machine to run the job on. [windows,macos, ubuntu , self-hosted]
    runs-on: ubuntu-latest
    #sequence of tasks called
    steps:
      # The branch or tag ref that triggered the workflow will be checked out.
      # https://github.com/actions/checkout
      - uses: actions/checkout@v1
      # Setup a flutter environment.
      # https://github.com/marketplace/actions/flutter-action
      - uses: subosito/flutter-action@v1.3.2
        with:
          flutter-version: '1.17.1'
      - run: flutter pub get
      # run static analysis code
#       - run: flutter  analyze
      # run  flutter widgets tests  and unit tests
      - run: flutter test
    


  Nexus_6_Integration_Test:
    #if conditional to prevent a job from running
    if: github.event_name != 'pull_request'
    runs-on: macos-latest
    #creates a build matrix for your jobs
    strategy:
      #set of different configurations of the virtual environment.
      matrix:
        api-level: [29]
        target: [google_apis]
    needs: Unit_Tests
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1.3.2
        with:
          flutter-version: '1.17.1'
      - name: Run Flutter Integration tests
        #GitHub Action for installing, configuring and running Android Emulators (work only Mac OS)
        #https://github.com/ReactiveCircus/android-emulator-runner
        uses: reactivecircus/android-emulator-runner@v1
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: flutter drive --target=test_driver/app.dart

#   build:

#     if: github.event_name != 'pull_request'
#     runs-on: ubuntu-latest
#     name: Build APK
#     needs: [Unit_Tests, Nexus_6_Integration_Test]
#     steps:
#       - uses: actions/checkout@v1
#       - uses: actions/setup-java@v1
#         with:
#           java-version: '12.x'
#       - uses: subosito/flutter-action@v1.3.2
#         with:
#           flutter-version: '1.17.1'
#       - run: flutter build apk --debug --split-per-abi
#       - name: Create a Release APK
#         uses: ncipollo/release-action@v1
#         with:
#           artifacts: "build/app/outputs/apk/debug/*.apk"
#           token: ${{ secrets.TOKEN }}
#           tag: v1.0.1
